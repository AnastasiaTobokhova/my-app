name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1️⃣ Параллельный запуск проверки стиля кода (lint)
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies for linting
        run: |
          pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt

      - name: Run flake8
        run: flake8 .

  # 2️⃣ Параллельный запуск тестов с помощью pytest
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: pytest

  # 3️⃣ Сборка и пуш Docker-образа (зависит от успешного завершения lint и тестов)
  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Укажи имя образа в формате <username>/<repository>:<tag>
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

  # 4️⃣ Деплой в Kubernetes (зависит от сборки Docker-образа)
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          # Применяем манифесты из директории k8s (убедиcь, что файлы настроены правильно)
          kubectl apply -f k8s/deployment.yaml
          # Дополнительно можно выполнить обновление образа в Deployment, например:
          # kubectl set image deployment/my-deployment my-container=${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest



