name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1️⃣ Задание: Проверка стиля кода (Lint)
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies for linting
        run: |
          pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt

      - name: Run flake8
        run: flake8 .

  # 2️⃣ Задание: Запуск тестов (pytest)
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        env:
          # Добавляем корневую директорию репозитория в PYTHONPATH для корректного импорта модулей
          PYTHONPATH: ${{ github.workspace }}
        run: pytest

  # 3️⃣ Задание: Сборка и публикация Docker-образа
  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Тег образа формируется по схеме: <DOCKER_USERNAME>/my-app:latest
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app:latest

  # 4️⃣ Задание: Деплой в Kubernetes
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          # Создаём директорию для kubeconfig (если её ещё нет)
          mkdir -p $HOME/.kube
          # Записываем содержимое секрета KUBE_CONFIG в файл конфигурации
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
         





